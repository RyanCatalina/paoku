<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotel.core.mapper.AccommodationRecordMapper">
  <resultMap id="BaseResultMap" type="com.hotel.core.entity.AccommodationRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="room_type" jdbcType="VARCHAR" property="roomType" />
    <result column="room_number" jdbcType="INTEGER" property="roomNumber" />
    <result column="room_price" jdbcType="VARCHAR" property="roomPrice" />
    <result column="total_price" jdbcType="VARCHAR" property="totalPrice" />
    <result column="checkin_date" jdbcType="DATE" property="checkinDate" />
    <result column="departure_date" jdbcType="DATE" property="departureDate" />
    <result column="test1" jdbcType="VARCHAR" property="test1" />
    <result column="test2" jdbcType="VARCHAR" property="test2" />
    <result column="test3" jdbcType="VARCHAR" property="test3" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, username, room_type, room_number, room_price, total_price, checkin_date, 
    departure_date, test1, test2, test3
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from accommodation_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from accommodation_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hotel.core.entity.AccommodationRecord">
    insert into accommodation_record (id, user_id, username, 
      room_type, room_number, room_price, 
      total_price, checkin_date, departure_date, 
      test1, test2, test3
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{roomType,jdbcType=VARCHAR}, #{roomNumber,jdbcType=INTEGER}, #{roomPrice,jdbcType=VARCHAR}, 
      #{totalPrice,jdbcType=VARCHAR}, #{checkinDate,jdbcType=DATE}, #{departureDate,jdbcType=DATE}, 
      #{test1,jdbcType=VARCHAR}, #{test2,jdbcType=VARCHAR}, #{test3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hotel.core.entity.AccommodationRecord">
    insert into accommodation_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="roomType != null">
        room_type,
      </if>
      <if test="roomNumber != null">
        room_number,
      </if>
      <if test="roomPrice != null">
        room_price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="checkinDate != null">
        checkin_date,
      </if>
      <if test="departureDate != null">
        departure_date,
      </if>
      <if test="test1 != null">
        test1,
      </if>
      <if test="test2 != null">
        test2,
      </if>
      <if test="test3 != null">
        test3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="roomType != null">
        #{roomType,jdbcType=VARCHAR},
      </if>
      <if test="roomNumber != null">
        #{roomNumber,jdbcType=INTEGER},
      </if>
      <if test="roomPrice != null">
        #{roomPrice,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=VARCHAR},
      </if>
      <if test="checkinDate != null">
        #{checkinDate,jdbcType=DATE},
      </if>
      <if test="departureDate != null">
        #{departureDate,jdbcType=DATE},
      </if>
      <if test="test1 != null">
        #{test1,jdbcType=VARCHAR},
      </if>
      <if test="test2 != null">
        #{test2,jdbcType=VARCHAR},
      </if>
      <if test="test3 != null">
        #{test3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hotel.core.entity.AccommodationRecord">
    update accommodation_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="roomType != null">
        room_type = #{roomType,jdbcType=VARCHAR},
      </if>
      <if test="roomNumber != null">
        room_number = #{roomNumber,jdbcType=INTEGER},
      </if>
      <if test="roomPrice != null">
        room_price = #{roomPrice,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=VARCHAR},
      </if>
      <if test="checkinDate != null">
        checkin_date = #{checkinDate,jdbcType=DATE},
      </if>
      <if test="departureDate != null">
        departure_date = #{departureDate,jdbcType=DATE},
      </if>
      <if test="test1 != null">
        test1 = #{test1,jdbcType=VARCHAR},
      </if>
      <if test="test2 != null">
        test2 = #{test2,jdbcType=VARCHAR},
      </if>
      <if test="test3 != null">
        test3 = #{test3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hotel.core.entity.AccommodationRecord">
    update accommodation_record
    set user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      room_type = #{roomType,jdbcType=VARCHAR},
      room_number = #{roomNumber,jdbcType=INTEGER},
      room_price = #{roomPrice,jdbcType=VARCHAR},
      total_price = #{totalPrice,jdbcType=VARCHAR},
      checkin_date = #{checkinDate,jdbcType=DATE},
      departure_date = #{departureDate,jdbcType=DATE},
      test1 = #{test1,jdbcType=VARCHAR},
      test2 = #{test2,jdbcType=VARCHAR},
      test3 = #{test3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>